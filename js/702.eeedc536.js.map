{"version":3,"file":"js/702.eeedc536.js","mappings":"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","sources":["webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/model/util.ts","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/model/node.ts","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/model/tree-store.ts","webpack://vue3-ts-cms/./node_modules/@element-plus/icons-vue/dist/es/caret-right.mjs","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/tree-node-content.vue","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/model/useNodeExpandEventBroadcast.ts","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/model/useDragNode.ts","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/tree-node.vue","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/model/useKeydown.ts","webpack://vue3-ts-cms/../../../../../../packages/components/tree/src/tree.vue","webpack://vue3-ts-cms/../../../../../packages/components/tree/index.ts","webpack://vue3-ts-cms/./src/views/main/system/role/RoleManager.vue?837e","webpack://vue3-ts-cms/./src/views/main/system/role/config/table-config.ts","webpack://vue3-ts-cms/./src/views/main/system/role/config/search-config.ts","webpack://vue3-ts-cms/./src/views/main/system/role/config/modal-config.ts","webpack://vue3-ts-cms/./src/views/main/system/role/RoleManager.vue","webpack://vue3-ts-cms/./src/views/main/system/role/RoleManager.vue?8f66","webpack://vue3-ts-cms/../../../../../../packages/components/collapse-transition/src/collapse-transition.vue","webpack://vue3-ts-cms/../../../../../packages/components/collapse-transition/index.ts"],"sourcesContent":["import type Node from './node'\nimport type { TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n","import { reactive } from 'vue'\nimport { hasOwn } from '@element-plus/utils'\nimport { NODE_KEY, markNodeData } from './util'\nimport type TreeStore from './tree-store'\n\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  FakeNode,\n  TreeKey,\n  TreeNodeChildState,\n  TreeNodeData,\n  TreeNodeLoadedDefaultProps,\n  TreeNodeOptions,\n} from '../tree.type'\n\nexport const getChildState = (node: Node[]): TreeNodeChildState => {\n  let all = true\n  let none = true\n  let allWithoutDisable = true\n  for (let i = 0, j = node.length; i < j; i++) {\n    const n = node[i]\n    if (n.checked !== true || n.indeterminate) {\n      all = false\n      if (!n.disabled) {\n        allWithoutDisable = false\n      }\n    }\n    if (n.checked !== false || n.indeterminate) {\n      none = false\n    }\n  }\n\n  return { all, none, allWithoutDisable, half: !all && !none }\n}\n\nconst reInitChecked = function (node: Node): void {\n  if (node.childNodes.length === 0) return\n\n  const { all, none, half } = getChildState(node.childNodes)\n  if (all) {\n    node.checked = true\n    node.indeterminate = false\n  } else if (half) {\n    node.checked = false\n    node.indeterminate = true\n  } else if (none) {\n    node.checked = false\n    node.indeterminate = false\n  }\n\n  const parent = node.parent\n  if (!parent || parent.level === 0) return\n\n  if (!node.store.checkStrictly) {\n    reInitChecked(parent)\n  }\n}\n\nconst getPropertyFromData = function (node: Node, prop: string): any {\n  const props = node.store.props\n  const data = node.data || {}\n  const config = props[prop]\n\n  if (typeof config === 'function') {\n    return config(data, node)\n  } else if (typeof config === 'string') {\n    return data[config]\n  } else if (typeof config === 'undefined') {\n    const dataProp = data[prop]\n    return dataProp === undefined ? '' : dataProp\n  }\n}\n\nlet nodeIdSeed = 0\n\nclass Node {\n  id: number\n  text: string\n  checked: boolean\n  indeterminate: boolean\n  data: TreeNodeData\n  expanded: boolean\n  parent: Node\n  visible: boolean\n  isCurrent: boolean\n  store: TreeStore\n  isLeafByUser: boolean\n  isLeaf: boolean\n  canFocus: boolean\n\n  level: number\n  loaded: boolean\n  childNodes: Node[]\n  loading: boolean\n\n  constructor(options: TreeNodeOptions) {\n    this.id = nodeIdSeed++\n    this.text = null\n    this.checked = false\n    this.indeterminate = false\n    this.data = null\n    this.expanded = false\n    this.parent = null\n    this.visible = true\n    this.isCurrent = false\n    this.canFocus = false\n\n    for (const name in options) {\n      if (hasOwn(options, name)) {\n        this[name] = options[name]\n      }\n    }\n\n    // internal\n    this.level = 0\n    this.loaded = false\n    this.childNodes = []\n    this.loading = false\n\n    if (this.parent) {\n      this.level = this.parent.level + 1\n    }\n  }\n\n  initialize() {\n    const store = this.store\n    if (!store) {\n      throw new Error('[Node]store is required!')\n    }\n    store.registerNode(this)\n\n    const props = store.props\n    if (props && typeof props.isLeaf !== 'undefined') {\n      const isLeaf = getPropertyFromData(this, 'isLeaf')\n      if (typeof isLeaf === 'boolean') {\n        this.isLeafByUser = isLeaf\n      }\n    }\n\n    if (store.lazy !== true && this.data) {\n      this.setData(this.data)\n\n      if (store.defaultExpandAll) {\n        this.expanded = true\n        this.canFocus = true\n      }\n    } else if (this.level > 0 && store.lazy && store.defaultExpandAll) {\n      this.expand()\n    }\n    if (!Array.isArray(this.data)) {\n      markNodeData(this, this.data)\n    }\n    if (!this.data) return\n\n    const defaultExpandedKeys = store.defaultExpandedKeys\n    const key = store.key\n\n    if (key && defaultExpandedKeys && defaultExpandedKeys.includes(this.key)) {\n      this.expand(null, store.autoExpandParent)\n    }\n\n    if (\n      key &&\n      store.currentNodeKey !== undefined &&\n      this.key === store.currentNodeKey\n    ) {\n      store.currentNode = this\n      store.currentNode.isCurrent = true\n    }\n\n    if (store.lazy) {\n      store._initDefaultCheckedNode(this)\n    }\n\n    this.updateLeafState()\n    if (this.parent && (this.level === 1 || this.parent.expanded === true))\n      this.canFocus = true\n  }\n\n  setData(data: TreeNodeData): void {\n    if (!Array.isArray(data)) {\n      markNodeData(this, data)\n    }\n\n    this.data = data\n    this.childNodes = []\n\n    let children\n    if (this.level === 0 && Array.isArray(this.data)) {\n      children = this.data\n    } else {\n      children = getPropertyFromData(this, 'children') || []\n    }\n\n    for (let i = 0, j = children.length; i < j; i++) {\n      this.insertChild({ data: children[i] })\n    }\n  }\n\n  get label(): string {\n    return getPropertyFromData(this, 'label')\n  }\n\n  get key(): TreeKey {\n    const nodeKey = this.store.key\n    if (this.data) return this.data[nodeKey]\n    return null\n  }\n\n  get disabled(): boolean {\n    return getPropertyFromData(this, 'disabled')\n  }\n\n  get nextSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return parent.childNodes[index + 1]\n      }\n    }\n    return null\n  }\n\n  get previousSibling(): Nullable<Node> {\n    const parent = this.parent\n    if (parent) {\n      const index = parent.childNodes.indexOf(this)\n      if (index > -1) {\n        return index > 0 ? parent.childNodes[index - 1] : null\n      }\n    }\n    return null\n  }\n\n  contains(target: Node, deep = true): boolean {\n    return (this.childNodes || []).some(\n      (child) => child === target || (deep && child.contains(target))\n    )\n  }\n\n  remove(): void {\n    const parent = this.parent\n    if (parent) {\n      parent.removeChild(this)\n    }\n  }\n\n  insertChild(child?: FakeNode | Node, index?: number, batch?: boolean): void {\n    if (!child) throw new Error('InsertChild error: child is required.')\n\n    if (!(child instanceof Node)) {\n      if (!batch) {\n        const children = this.getChildren(true)\n        if (!children.includes(child.data)) {\n          if (typeof index === 'undefined' || index < 0) {\n            children.push(child.data)\n          } else {\n            children.splice(index, 0, child.data)\n          }\n        }\n      }\n      Object.assign(child, {\n        parent: this,\n        store: this.store,\n      })\n      child = reactive(new Node(child as TreeNodeOptions))\n      if (child instanceof Node) {\n        child.initialize()\n      }\n    }\n\n    ;(child as Node).level = this.level + 1\n\n    if (typeof index === 'undefined' || index < 0) {\n      this.childNodes.push(child as Node)\n    } else {\n      this.childNodes.splice(index, 0, child as Node)\n    }\n\n    this.updateLeafState()\n  }\n\n  insertBefore(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n    }\n    this.insertChild(child, index)\n  }\n\n  insertAfter(child: FakeNode | Node, ref: Node): void {\n    let index\n    if (ref) {\n      index = this.childNodes.indexOf(ref)\n      if (index !== -1) index += 1\n    }\n    this.insertChild(child, index)\n  }\n\n  removeChild(child: Node): void {\n    const children = this.getChildren() || []\n    const dataIndex = children.indexOf(child.data)\n    if (dataIndex > -1) {\n      children.splice(dataIndex, 1)\n    }\n\n    const index = this.childNodes.indexOf(child)\n\n    if (index > -1) {\n      this.store && this.store.deregisterNode(child)\n      child.parent = null\n      this.childNodes.splice(index, 1)\n    }\n\n    this.updateLeafState()\n  }\n\n  removeChildByData(data: TreeNodeData): void {\n    let targetNode: Node = null\n\n    for (let i = 0; i < this.childNodes.length; i++) {\n      if (this.childNodes[i].data === data) {\n        targetNode = this.childNodes[i]\n        break\n      }\n    }\n\n    if (targetNode) {\n      this.removeChild(targetNode)\n    }\n  }\n\n  expand(callback?: () => void, expandParent?: boolean): void {\n    const done = (): void => {\n      if (expandParent) {\n        let parent = this.parent\n        while (parent.level > 0) {\n          parent.expanded = true\n          parent = parent.parent\n        }\n      }\n      this.expanded = true\n      if (callback) callback()\n      this.childNodes.forEach((item) => {\n        item.canFocus = true\n      })\n    }\n\n    if (this.shouldLoadData()) {\n      this.loadData((data) => {\n        if (Array.isArray(data)) {\n          if (this.checked) {\n            this.setChecked(true, true)\n          } else if (!this.store.checkStrictly) {\n            reInitChecked(this)\n          }\n          done()\n        }\n      })\n    } else {\n      done()\n    }\n  }\n\n  doCreateChildren(\n    array: TreeNodeData[],\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ): void {\n    array.forEach((item) => {\n      this.insertChild(\n        Object.assign({ data: item }, defaultProps),\n        undefined,\n        true\n      )\n    })\n  }\n\n  collapse(): void {\n    this.expanded = false\n    this.childNodes.forEach((item) => {\n      item.canFocus = false\n    })\n  }\n\n  shouldLoadData(): boolean {\n    return this.store.lazy === true && this.store.load && !this.loaded\n  }\n\n  updateLeafState(): void {\n    if (\n      this.store.lazy === true &&\n      this.loaded !== true &&\n      typeof this.isLeafByUser !== 'undefined'\n    ) {\n      this.isLeaf = this.isLeafByUser\n      return\n    }\n    const childNodes = this.childNodes\n    if (\n      !this.store.lazy ||\n      (this.store.lazy === true && this.loaded === true)\n    ) {\n      this.isLeaf = !childNodes || childNodes.length === 0\n      return\n    }\n    this.isLeaf = false\n  }\n\n  setChecked(\n    value?: boolean | string,\n    deep?: boolean,\n    recursion?: boolean,\n    passValue?: boolean\n  ) {\n    this.indeterminate = value === 'half'\n    this.checked = value === true\n\n    if (this.store.checkStrictly) return\n\n    if (!(this.shouldLoadData() && !this.store.checkDescendants)) {\n      const { all, allWithoutDisable } = getChildState(this.childNodes)\n\n      if (!this.isLeaf && !all && allWithoutDisable) {\n        this.checked = false\n        value = false\n      }\n\n      const handleDescendants = (): void => {\n        if (deep) {\n          const childNodes = this.childNodes\n          for (let i = 0, j = childNodes.length; i < j; i++) {\n            const child = childNodes[i]\n            passValue = passValue || value !== false\n            const isCheck = child.disabled ? child.checked : passValue\n            child.setChecked(isCheck, deep, true, passValue)\n          }\n          const { half, all } = getChildState(childNodes)\n          if (!all) {\n            this.checked = all\n            this.indeterminate = half\n          }\n        }\n      }\n\n      if (this.shouldLoadData()) {\n        // Only work on lazy load data.\n        this.loadData(\n          () => {\n            handleDescendants()\n            reInitChecked(this)\n          },\n          {\n            checked: value !== false,\n          }\n        )\n        return\n      } else {\n        handleDescendants()\n      }\n    }\n\n    const parent = this.parent\n    if (!parent || parent.level === 0) return\n\n    if (!recursion) {\n      reInitChecked(parent)\n    }\n  }\n\n  getChildren(forceInit = false): TreeNodeData | TreeNodeData[] {\n    // this is data\n    if (this.level === 0) return this.data\n    const data = this.data\n    if (!data) return null\n\n    const props = this.store.props\n    let children = 'children'\n    if (props) {\n      children = props.children || 'children'\n    }\n\n    if (data[children] === undefined) {\n      data[children] = null\n    }\n\n    if (forceInit && !data[children]) {\n      data[children] = []\n    }\n\n    return data[children]\n  }\n\n  updateChildren(): void {\n    const newData = (this.getChildren() || []) as TreeNodeData[]\n    const oldData = this.childNodes.map((node) => node.data)\n\n    const newDataMap = {}\n    const newNodes = []\n\n    newData.forEach((item, index) => {\n      const key = item[NODE_KEY]\n      const isNodeExists =\n        !!key && oldData.findIndex((data) => data[NODE_KEY] === key) >= 0\n      if (isNodeExists) {\n        newDataMap[key] = { index, data: item }\n      } else {\n        newNodes.push({ index, data: item })\n      }\n    })\n\n    if (!this.store.lazy) {\n      oldData.forEach((item) => {\n        if (!newDataMap[item[NODE_KEY]]) this.removeChildByData(item)\n      })\n    }\n\n    newNodes.forEach(({ index, data }) => {\n      this.insertChild({ data }, index)\n    })\n\n    this.updateLeafState()\n  }\n\n  loadData(\n    callback: (node: Node) => void,\n    defaultProps: TreeNodeLoadedDefaultProps = {}\n  ) {\n    if (\n      this.store.lazy === true &&\n      this.store.load &&\n      !this.loaded &&\n      (!this.loading || Object.keys(defaultProps).length)\n    ) {\n      this.loading = true\n\n      const resolve = (children) => {\n        this.loaded = true\n        this.loading = false\n        this.childNodes = []\n\n        this.doCreateChildren(children, defaultProps)\n\n        this.updateLeafState()\n        if (callback) {\n          callback.call(this, children)\n        }\n      }\n\n      this.store.load(this, resolve)\n    } else {\n      if (callback) {\n        callback.call(this)\n      }\n    }\n  }\n}\n\nexport default Node\n","import { hasOwn } from '@element-plus/utils'\nimport Node from './node'\nimport { getNodeKey } from './util'\n\nimport type {\n  FilterNodeMethodFunction,\n  FilterValue,\n  LoadFunction,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n  TreeOptionProps,\n  TreeStoreNodesMap,\n  TreeStoreOptions,\n} from '../tree.type'\n\nexport default class TreeStore {\n  currentNode: Node\n  currentNodeKey: TreeKey\n  nodesMap: TreeStoreNodesMap\n  root: Node\n  data: TreeData\n  lazy: boolean\n  load: LoadFunction\n  filterNodeMethod: FilterNodeMethodFunction\n  key: TreeKey\n  defaultCheckedKeys: TreeKey[]\n  checkStrictly: boolean\n  defaultExpandedKeys: TreeKey[]\n  autoExpandParent: boolean\n  defaultExpandAll: boolean\n  checkDescendants: boolean\n  props: TreeOptionProps\n\n  constructor(options: TreeStoreOptions) {\n    this.currentNode = null\n    this.currentNodeKey = null\n\n    for (const option in options) {\n      if (hasOwn(options, option)) {\n        this[option] = options[option]\n      }\n    }\n\n    this.nodesMap = {}\n  }\n\n  initialize() {\n    this.root = new Node({\n      data: this.data,\n      store: this,\n    })\n    this.root.initialize()\n\n    if (this.lazy && this.load) {\n      const loadFn = this.load\n      loadFn(this.root, (data) => {\n        this.root.doCreateChildren(data)\n        this._initDefaultCheckedNodes()\n      })\n    } else {\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  filter(value: FilterValue): void {\n    const filterNodeMethod = this.filterNodeMethod\n    const lazy = this.lazy\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        child.visible = filterNodeMethod.call(child, value, child.data, child)\n\n        traverse(child)\n      })\n\n      if (!(node as Node).visible && childNodes.length) {\n        let allHidden = true\n        allHidden = !childNodes.some((child) => child.visible)\n\n        if ((node as TreeStore).root) {\n          ;(node as TreeStore).root.visible = allHidden === false\n        } else {\n          ;(node as Node).visible = allHidden === false\n        }\n      }\n      if (!value) return\n\n      if ((node as Node).visible && !(node as Node).isLeaf && !lazy)\n        (node as Node).expand()\n    }\n\n    traverse(this)\n  }\n\n  setData(newVal: TreeData): void {\n    const instanceChanged = newVal !== this.root.data\n    if (instanceChanged) {\n      this.root.setData(newVal)\n      this._initDefaultCheckedNodes()\n    } else {\n      this.root.updateChildren()\n    }\n  }\n\n  getNode(data: TreeKey | TreeNodeData): Node {\n    if (data instanceof Node) return data\n    const key = typeof data !== 'object' ? data : getNodeKey(this.key, data)\n    return this.nodesMap[key] || null\n  }\n\n  insertBefore(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertBefore({ data }, refNode)\n  }\n\n  insertAfter(data: TreeNodeData, refData: TreeKey | TreeNodeData): void {\n    const refNode = this.getNode(refData)\n    refNode.parent.insertAfter({ data }, refNode)\n  }\n\n  remove(data: TreeNodeData | Node): void {\n    const node = this.getNode(data)\n\n    if (node && node.parent) {\n      if (node === this.currentNode) {\n        this.currentNode = null\n      }\n      node.parent.removeChild(node)\n    }\n  }\n\n  append(data: TreeNodeData, parentData: TreeNodeData | TreeKey | Node): void {\n    const parentNode = parentData ? this.getNode(parentData) : this.root\n\n    if (parentNode) {\n      parentNode.insertChild({ data })\n    }\n  }\n\n  _initDefaultCheckedNodes(): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n    const nodesMap = this.nodesMap\n\n    defaultCheckedKeys.forEach((checkedKey) => {\n      const node = nodesMap[checkedKey]\n\n      if (node) {\n        node.setChecked(true, !this.checkStrictly)\n      }\n    })\n  }\n\n  _initDefaultCheckedNode(node: Node): void {\n    const defaultCheckedKeys = this.defaultCheckedKeys || []\n\n    if (defaultCheckedKeys.includes(node.key)) {\n      node.setChecked(true, !this.checkStrictly)\n    }\n  }\n\n  setDefaultCheckedKey(newVal: TreeKey[]): void {\n    if (newVal !== this.defaultCheckedKeys) {\n      this.defaultCheckedKeys = newVal\n      this._initDefaultCheckedNodes()\n    }\n  }\n\n  registerNode(node: Node): void {\n    const key = this.key\n    if (!node || !node.data) return\n\n    if (!key) {\n      this.nodesMap[node.id] = node\n    } else {\n      const nodeKey = node.key\n      if (nodeKey !== undefined) this.nodesMap[node.key] = node\n    }\n  }\n\n  deregisterNode(node: Node): void {\n    const key = this.key\n    if (!key || !node || !node.data) return\n\n    node.childNodes.forEach((child) => {\n      this.deregisterNode(child)\n    })\n\n    delete this.nodesMap[node.key]\n  }\n\n  getCheckedNodes(\n    leafOnly = false,\n    includeHalfChecked = false\n  ): TreeNodeData[] {\n    const checkedNodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (\n          (child.checked || (includeHalfChecked && child.indeterminate)) &&\n          (!leafOnly || (leafOnly && child.isLeaf))\n        ) {\n          checkedNodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return checkedNodes\n  }\n\n  getCheckedKeys(leafOnly = false): TreeKey[] {\n    return this.getCheckedNodes(leafOnly).map((data) => (data || {})[this.key])\n  }\n\n  getHalfCheckedNodes(): TreeNodeData[] {\n    const nodes: TreeNodeData[] = []\n    const traverse = function (node: TreeStore | Node) {\n      const childNodes = (node as TreeStore).root\n        ? (node as TreeStore).root.childNodes\n        : (node as Node).childNodes\n\n      childNodes.forEach((child) => {\n        if (child.indeterminate) {\n          nodes.push(child.data)\n        }\n\n        traverse(child)\n      })\n    }\n\n    traverse(this)\n\n    return nodes\n  }\n\n  getHalfCheckedKeys(): TreeKey[] {\n    return this.getHalfCheckedNodes().map((data) => (data || {})[this.key])\n  }\n\n  _getAllNodes(): Node[] {\n    const allNodes: Node[] = []\n    const nodesMap = this.nodesMap\n    for (const nodeKey in nodesMap) {\n      if (hasOwn(nodesMap, nodeKey)) {\n        allNodes.push(nodesMap[nodeKey])\n      }\n    }\n\n    return allNodes\n  }\n\n  updateChildren(key: TreeKey, data: TreeData): void {\n    const node = this.nodesMap[key]\n    if (!node) return\n    const childNodes = node.childNodes\n    for (let i = childNodes.length - 1; i >= 0; i--) {\n      const child = childNodes[i]\n      this.remove(child.data)\n    }\n    for (let i = 0, j = data.length; i < j; i++) {\n      const child = data[i]\n      this.append(child, node.data)\n    }\n  }\n\n  _setCheckedKeys(\n    key: TreeKey,\n    leafOnly = false,\n    checkedKeys: { [key: string]: boolean }\n  ): void {\n    const allNodes = this._getAllNodes().sort((a, b) => b.level - a.level)\n    const cache = Object.create(null)\n    const keys = Object.keys(checkedKeys)\n    allNodes.forEach((node) => node.setChecked(false, false))\n    for (let i = 0, j = allNodes.length; i < j; i++) {\n      const node = allNodes[i]\n      const nodeKey = node.data[key].toString()\n      const checked = keys.includes(nodeKey)\n      if (!checked) {\n        if (node.checked && !cache[nodeKey]) {\n          node.setChecked(false, false)\n        }\n        continue\n      }\n\n      let parent = node.parent\n      while (parent && parent.level > 0) {\n        cache[parent.data[key]] = true\n        parent = parent.parent\n      }\n\n      if (node.isLeaf || this.checkStrictly) {\n        node.setChecked(true, false)\n        continue\n      }\n      node.setChecked(true, true)\n\n      if (leafOnly) {\n        node.setChecked(false, false)\n        const traverse = function (node: Node): void {\n          const childNodes = node.childNodes\n          childNodes.forEach((child) => {\n            if (!child.isLeaf) {\n              child.setChecked(false, false)\n            }\n            traverse(child)\n          })\n        }\n        traverse(node)\n      }\n    }\n  }\n\n  setCheckedNodes(array: Node[], leafOnly = false): void {\n    const key = this.key\n    const checkedKeys = {}\n    array.forEach((item) => {\n      checkedKeys[(item || {})[key]] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setCheckedKeys(keys: TreeKey[], leafOnly = false): void {\n    this.defaultCheckedKeys = keys\n    const key = this.key\n    const checkedKeys = {}\n    keys.forEach((key) => {\n      checkedKeys[key] = true\n    })\n\n    this._setCheckedKeys(key, leafOnly, checkedKeys)\n  }\n\n  setDefaultExpandedKeys(keys: TreeKey[]) {\n    keys = keys || []\n    this.defaultExpandedKeys = keys\n    keys.forEach((key) => {\n      const node = this.getNode(key)\n      if (node) node.expand(null, this.autoExpandParent)\n    })\n  }\n\n  setChecked(\n    data: TreeKey | TreeNodeData,\n    checked: boolean,\n    deep: boolean\n  ): void {\n    const node = this.getNode(data)\n\n    if (node) {\n      node.setChecked(!!checked, deep)\n    }\n  }\n\n  getCurrentNode(): Node {\n    return this.currentNode\n  }\n\n  setCurrentNode(currentNode: Node): void {\n    const prevCurrentNode = this.currentNode\n    if (prevCurrentNode) {\n      prevCurrentNode.isCurrent = false\n    }\n    this.currentNode = currentNode\n    this.currentNode.isCurrent = true\n  }\n\n  setUserCurrentNode(node: Node, shouldAutoExpandParent = true): void {\n    const key = node[this.key]\n    const currNode = this.nodesMap[key]\n    this.setCurrentNode(currNode)\n    if (shouldAutoExpandParent && this.currentNode.level > 1) {\n      this.currentNode.parent.expand(null, true)\n    }\n  }\n\n  setCurrentNodeKey(key: TreeKey, shouldAutoExpandParent = true): void {\n    if (key === null || key === undefined) {\n      this.currentNode && (this.currentNode.isCurrent = false)\n      this.currentNode = null\n      return\n    }\n    const node = this.getNode(key)\n    if (node) {\n      this.setCurrentNode(node)\n      if (shouldAutoExpandParent && this.currentNode.level > 1) {\n        this.currentNode.parent.expand(null, true)\n      }\n    }\n  }\n}\n","import { defineComponent, openBlock, createElementBlock, createElementVNode } from 'vue';\nimport _export_sfc from './_virtual/plugin-vue_export-helper.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"CaretRight\"\n});\nconst _hoisted_1 = {\n  viewBox: \"0 0 1024 1024\",\n  xmlns: \"http://www.w3.org/2000/svg\"\n};\nconst _hoisted_2 = /* @__PURE__ */ createElementVNode(\"path\", {\n  fill: \"currentColor\",\n  d: \"M384 192v640l384-320.064z\"\n}, null, -1);\nconst _hoisted_3 = [\n  _hoisted_2\n];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"svg\", _hoisted_1, _hoisted_3);\n}\nvar caretRight = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { caretRight as default };\n","<script lang=\"ts\">\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n","import { inject, provide } from 'vue'\nimport type Node from '../model/node'\n\ninterface NodeMap {\n  treeNodeExpand(node: Node): void\n  children: NodeMap[]\n}\n\nexport function useNodeExpandEventBroadcast(props) {\n  const parentNodeMap = inject<NodeMap>('TreeNodeMap', null)\n  const currentNodeMap: NodeMap = {\n    treeNodeExpand: (node) => {\n      if (props.node !== node) {\n        props.node.collapse()\n      }\n    },\n    children: [],\n  }\n\n  if (parentNodeMap) {\n    parentNodeMap.children.push(currentNodeMap)\n  }\n\n  provide('TreeNodeMap', currentNodeMap)\n\n  return {\n    broadcastExpanded: (node: Node): void => {\n      if (!props.accordion) return\n      for (const childNode of currentNodeMap.children) {\n        childNode.treeNodeExpand(node)\n      }\n    },\n  }\n}\n","import { provide, ref } from 'vue'\nimport { addClass, removeClass } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { InjectionKey } from 'vue'\nimport type Node from './node'\n\ninterface TreeNode {\n  node: Node\n  $el?: HTMLElement\n}\n\ninterface DragOptions {\n  event: DragEvent\n  treeNode: TreeNode\n}\n\nexport interface DragEvents {\n  treeNodeDragStart: (options: DragOptions) => void\n  treeNodeDragOver: (options: DragOptions) => void\n  treeNodeDragEnd: (event: DragEvent) => void\n}\n\nexport const dragEventsKey: InjectionKey<DragEvents> = Symbol('dragEvents')\n\nexport function useDragNodeHandler({ props, ctx, el$, dropIndicator$, store }) {\n  const ns = useNamespace('tree')\n  const dragState = ref({\n    showDropIndicator: false,\n    draggingNode: null,\n    dropNode: null,\n    allowDrop: true,\n    dropType: null,\n  })\n\n  const treeNodeDragStart = ({ event, treeNode }: DragOptions) => {\n    if (\n      typeof props.allowDrag === 'function' &&\n      !props.allowDrag(treeNode.node)\n    ) {\n      event.preventDefault()\n      return false\n    }\n    event.dataTransfer.effectAllowed = 'move'\n\n    // wrap in try catch to address IE's error when first param is 'text/plain'\n    try {\n      // setData is required for draggable to work in FireFox\n      // the content has to be '' so dragging a node out of the tree won't open a new tab in FireFox\n      event.dataTransfer.setData('text/plain', '')\n    } catch {}\n    dragState.value.draggingNode = treeNode\n    ctx.emit('node-drag-start', treeNode.node, event)\n  }\n\n  const treeNodeDragOver = ({ event, treeNode }: DragOptions) => {\n    const dropNode = treeNode\n    const oldDropNode = dragState.value.dropNode\n    if (oldDropNode && oldDropNode !== dropNode) {\n      removeClass(oldDropNode.$el, ns.is('drop-inner'))\n    }\n    const draggingNode = dragState.value.draggingNode\n    if (!draggingNode || !dropNode) return\n\n    let dropPrev = true\n    let dropInner = true\n    let dropNext = true\n    let userAllowDropInner = true\n    if (typeof props.allowDrop === 'function') {\n      dropPrev = props.allowDrop(draggingNode.node, dropNode.node, 'prev')\n      userAllowDropInner = dropInner = props.allowDrop(\n        draggingNode.node,\n        dropNode.node,\n        'inner'\n      )\n      dropNext = props.allowDrop(draggingNode.node, dropNode.node, 'next')\n    }\n    event.dataTransfer.dropEffect =\n      dropInner || dropPrev || dropNext ? 'move' : 'none'\n    if ((dropPrev || dropInner || dropNext) && oldDropNode !== dropNode) {\n      if (oldDropNode) {\n        ctx.emit('node-drag-leave', draggingNode.node, oldDropNode.node, event)\n      }\n      ctx.emit('node-drag-enter', draggingNode.node, dropNode.node, event)\n    }\n\n    if (dropPrev || dropInner || dropNext) {\n      dragState.value.dropNode = dropNode\n    }\n\n    if (dropNode.node.nextSibling === draggingNode.node) {\n      dropNext = false\n    }\n    if (dropNode.node.previousSibling === draggingNode.node) {\n      dropPrev = false\n    }\n    if (dropNode.node.contains(draggingNode.node, false)) {\n      dropInner = false\n    }\n    if (\n      draggingNode.node === dropNode.node ||\n      draggingNode.node.contains(dropNode.node)\n    ) {\n      dropPrev = false\n      dropInner = false\n      dropNext = false\n    }\n\n    const targetPosition = dropNode.$el.getBoundingClientRect()\n    const treePosition = el$.value.getBoundingClientRect()\n\n    let dropType\n    const prevPercent = dropPrev ? (dropInner ? 0.25 : dropNext ? 0.45 : 1) : -1\n    const nextPercent = dropNext ? (dropInner ? 0.75 : dropPrev ? 0.55 : 0) : 1\n\n    let indicatorTop = -9999\n    const distance = event.clientY - targetPosition.top\n    if (distance < targetPosition.height * prevPercent) {\n      dropType = 'before'\n    } else if (distance > targetPosition.height * nextPercent) {\n      dropType = 'after'\n    } else if (dropInner) {\n      dropType = 'inner'\n    } else {\n      dropType = 'none'\n    }\n\n    const iconPosition = dropNode.$el\n      .querySelector(`.${ns.be('node', 'expand-icon')}`)\n      .getBoundingClientRect()\n    const dropIndicator = dropIndicator$.value\n    if (dropType === 'before') {\n      indicatorTop = iconPosition.top - treePosition.top\n    } else if (dropType === 'after') {\n      indicatorTop = iconPosition.bottom - treePosition.top\n    }\n    dropIndicator.style.top = `${indicatorTop}px`\n    dropIndicator.style.left = `${iconPosition.right - treePosition.left}px`\n\n    if (dropType === 'inner') {\n      addClass(dropNode.$el, ns.is('drop-inner'))\n    } else {\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n    }\n\n    dragState.value.showDropIndicator =\n      dropType === 'before' || dropType === 'after'\n    dragState.value.allowDrop =\n      dragState.value.showDropIndicator || userAllowDropInner\n    dragState.value.dropType = dropType\n    ctx.emit('node-drag-over', draggingNode.node, dropNode.node, event)\n  }\n\n  const treeNodeDragEnd = (event: DragEvent) => {\n    const { draggingNode, dropType, dropNode } = dragState.value\n    event.preventDefault()\n    event.dataTransfer.dropEffect = 'move'\n\n    if (draggingNode && dropNode) {\n      const draggingNodeCopy = { data: draggingNode.node.data }\n      if (dropType !== 'none') {\n        draggingNode.node.remove()\n      }\n      if (dropType === 'before') {\n        dropNode.node.parent.insertBefore(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'after') {\n        dropNode.node.parent.insertAfter(draggingNodeCopy, dropNode.node)\n      } else if (dropType === 'inner') {\n        dropNode.node.insertChild(draggingNodeCopy)\n      }\n      if (dropType !== 'none') {\n        store.value.registerNode(draggingNodeCopy)\n      }\n\n      removeClass(dropNode.$el, ns.is('drop-inner'))\n\n      ctx.emit(\n        'node-drag-end',\n        draggingNode.node,\n        dropNode.node,\n        dropType,\n        event\n      )\n      if (dropType !== 'none') {\n        ctx.emit('node-drop', draggingNode.node, dropNode.node, dropType, event)\n      }\n    }\n    if (draggingNode && !dropNode) {\n      ctx.emit('node-drag-end', draggingNode.node, null, dropType, event)\n    }\n\n    dragState.value.showDropIndicator = false\n    dragState.value.draggingNode = null\n    dragState.value.dropNode = null\n    dragState.value.allowDrop = true\n  }\n\n  provide(dragEventsKey, {\n    treeNodeDragStart,\n    treeNodeDragOver,\n    treeNodeDragEnd,\n  })\n\n  return {\n    dragState,\n  }\n}\n","<template>\n  <div\n    v-show=\"node.visible\"\n    ref=\"node$\"\n    :class=\"[\n      ns.b('node'),\n      ns.is('expanded', expanded),\n      ns.is('current', node.isCurrent),\n      ns.is('hidden', !node.visible),\n      ns.is('focusable', !node.disabled),\n      ns.is('checked', !node.disabled && node.checked),\n      getNodeClass(node),\n    ]\"\n    role=\"treeitem\"\n    tabindex=\"-1\"\n    :aria-expanded=\"expanded\"\n    :aria-disabled=\"node.disabled\"\n    :aria-checked=\"node.checked\"\n    :draggable=\"tree.props.draggable\"\n    :data-key=\"getNodeKey(node)\"\n    @click.stop=\"handleClick\"\n    @contextmenu=\"handleContextMenu\"\n    @dragstart.stop=\"handleDragStart\"\n    @dragover.stop=\"handleDragOver\"\n    @dragend.stop=\"handleDragEnd\"\n    @drop.stop=\"handleDrop\"\n  >\n    <div\n      :class=\"ns.be('node', 'content')\"\n      :style=\"{ paddingLeft: (node.level - 1) * tree.props.indent + 'px' }\"\n    >\n      <el-icon\n        v-if=\"tree.props.icon || CaretRight\"\n        :class=\"[\n          ns.be('node', 'expand-icon'),\n          ns.is('leaf', node.isLeaf),\n          {\n            expanded: !node.isLeaf && expanded,\n          },\n        ]\"\n        @click.stop=\"handleExpandIconClick\"\n      >\n        <component :is=\"tree.props.icon || CaretRight\" />\n      </el-icon>\n      <el-checkbox\n        v-if=\"showCheckbox\"\n        :model-value=\"node.checked\"\n        :indeterminate=\"node.indeterminate\"\n        :disabled=\"!!node.disabled\"\n        @click.stop\n        @change=\"handleCheckChange\"\n      />\n      <el-icon\n        v-if=\"node.loading\"\n        :class=\"[ns.be('node', 'loading-icon'), ns.is('loading')]\"\n      >\n        <loading />\n      </el-icon>\n      <node-content :node=\"node\" :render-content=\"renderContent\" />\n    </div>\n    <el-collapse-transition>\n      <div\n        v-if=\"!renderAfterExpand || childNodeRendered\"\n        v-show=\"expanded\"\n        :class=\"ns.be('node', 'children')\"\n        role=\"group\"\n        :aria-expanded=\"expanded\"\n      >\n        <el-tree-node\n          v-for=\"child in node.childNodes\"\n          :key=\"getNodeKey(child)\"\n          :render-content=\"renderContent\"\n          :render-after-expand=\"renderAfterExpand\"\n          :show-checkbox=\"showCheckbox\"\n          :node=\"child\"\n          :accordion=\"accordion\"\n          :props=\"props\"\n          @node-expand=\"handleChildNodeExpand\"\n        />\n      </div>\n    </el-collapse-transition>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  getCurrentInstance,\n  inject,\n  nextTick,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { isFunction, isString } from '@vue/shared'\nimport ElCollapseTransition from '@element-plus/components/collapse-transition'\nimport ElCheckbox from '@element-plus/components/checkbox'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { CaretRight, Loading } from '@element-plus/icons-vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport NodeContent from './tree-node-content.vue'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { dragEventsKey } from './model/useDragNode'\nimport Node from './model/node'\n\nimport type { ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { RootTreeType, TreeNodeData, TreeOptionProps } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNode',\n  components: {\n    ElCollapseTransition,\n    ElCheckbox,\n    NodeContent,\n    ElIcon,\n    Loading,\n  },\n  props: {\n    node: {\n      type: Node,\n      default: () => ({}),\n    },\n    props: {\n      type: Object as PropType<TreeOptionProps>,\n      default: () => ({}),\n    },\n    accordion: Boolean,\n    renderContent: Function,\n    renderAfterExpand: Boolean,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['node-expand'],\n  setup(props, ctx) {\n    const ns = useNamespace('tree')\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n    const tree = inject<RootTreeType>('RootTree')\n    const expanded = ref(false)\n    const childNodeRendered = ref(false)\n    const oldChecked = ref<boolean>(null)\n    const oldIndeterminate = ref<boolean>(null)\n    const node$ = ref<Nullable<HTMLElement>>(null)\n    const dragEvents = inject(dragEventsKey)\n    const instance = getCurrentInstance()\n\n    provide('NodeInstance', instance)\n    if (!tree) {\n      debugWarn('Tree', \"Can not find node's tree.\")\n    }\n\n    if (props.node.expanded) {\n      expanded.value = true\n      childNodeRendered.value = true\n    }\n\n    const childrenKey = tree.props['children'] || 'children'\n    watch(\n      () => {\n        const children = props.node.data[childrenKey]\n        return children && [...children]\n      },\n      () => {\n        props.node.updateChildren()\n      }\n    )\n\n    watch(\n      () => props.node.indeterminate,\n      (val) => {\n        handleSelectChange(props.node.checked, val)\n      }\n    )\n\n    watch(\n      () => props.node.checked,\n      (val) => {\n        handleSelectChange(val, props.node.indeterminate)\n      }\n    )\n\n    watch(\n      () => props.node.expanded,\n      (val) => {\n        nextTick(() => (expanded.value = val))\n        if (val) {\n          childNodeRendered.value = true\n        }\n      }\n    )\n\n    const getNodeKey = (node: Node): any => {\n      return getNodeKeyUtil(tree.props.nodeKey, node.data)\n    }\n\n    const getNodeClass = (node: Node) => {\n      const nodeClassFunc = props.props.class\n      if (!nodeClassFunc) {\n        return {}\n      }\n      let className\n      if (isFunction(nodeClassFunc)) {\n        const { data } = node\n        className = nodeClassFunc(data, node)\n      } else {\n        className = nodeClassFunc\n      }\n\n      if (isString(className)) {\n        return { [className]: true }\n      } else {\n        return className\n      }\n    }\n\n    const handleSelectChange = (checked: boolean, indeterminate: boolean) => {\n      if (\n        oldChecked.value !== checked ||\n        oldIndeterminate.value !== indeterminate\n      ) {\n        tree.ctx.emit('check-change', props.node.data, checked, indeterminate)\n      }\n      oldChecked.value = checked\n      oldIndeterminate.value = indeterminate\n    }\n\n    const handleClick = (e: MouseEvent) => {\n      const store = tree.store.value\n      store.setCurrentNode(props.node)\n      tree.ctx.emit(\n        'current-change',\n        store.currentNode ? store.currentNode.data : null,\n        store.currentNode\n      )\n      tree.currentNode.value = props.node\n\n      if (tree.props.expandOnClickNode) {\n        handleExpandIconClick()\n      }\n\n      if (tree.props.checkOnClickNode && !props.node.disabled) {\n        handleCheckChange(null, {\n          target: { checked: !props.node.checked },\n        })\n      }\n      tree.ctx.emit('node-click', props.node.data, props.node, instance, e)\n    }\n\n    const handleContextMenu = (event: Event) => {\n      if (tree.instance.vnode.props['onNodeContextmenu']) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n      tree.ctx.emit(\n        'node-contextmenu',\n        event,\n        props.node.data,\n        props.node,\n        instance\n      )\n    }\n\n    const handleExpandIconClick = () => {\n      if (props.node.isLeaf) return\n      if (expanded.value) {\n        tree.ctx.emit('node-collapse', props.node.data, props.node, instance)\n        props.node.collapse()\n      } else {\n        props.node.expand()\n        ctx.emit('node-expand', props.node.data, props.node, instance)\n      }\n    }\n\n    const handleCheckChange = (value, ev) => {\n      props.node.setChecked(ev.target.checked, !tree.props.checkStrictly)\n      nextTick(() => {\n        const store = tree.store.value\n        tree.ctx.emit('check', props.node.data, {\n          checkedNodes: store.getCheckedNodes(),\n          checkedKeys: store.getCheckedKeys(),\n          halfCheckedNodes: store.getHalfCheckedNodes(),\n          halfCheckedKeys: store.getHalfCheckedKeys(),\n        })\n      })\n    }\n\n    const handleChildNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      tree.ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const handleDragStart = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragStart({ event, treeNode: props })\n    }\n\n    const handleDragOver = (event: DragEvent) => {\n      event.preventDefault()\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragOver({\n        event,\n        treeNode: { $el: node$.value, node: props.node },\n      })\n    }\n\n    const handleDrop = (event: DragEvent) => {\n      event.preventDefault()\n    }\n\n    const handleDragEnd = (event: DragEvent) => {\n      if (!tree.props.draggable) return\n      dragEvents.treeNodeDragEnd(event)\n    }\n\n    return {\n      ns,\n      node$,\n      tree,\n      expanded,\n      childNodeRendered,\n      oldChecked,\n      oldIndeterminate,\n      getNodeKey,\n      getNodeClass,\n      handleSelectChange,\n      handleClick,\n      handleContextMenu,\n      handleExpandIconClick,\n      handleCheckChange,\n      handleChildNodeExpand,\n      handleDragStart,\n      handleDragOver,\n      handleDrop,\n      handleDragEnd,\n      CaretRight,\n    }\n  },\n})\n</script>\n","import { onBeforeUnmount, onMounted, onUpdated, shallowRef, watch } from 'vue'\nimport { off, on } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport type TreeStore from './tree-store'\n\nimport type { Ref } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\n\ninterface UseKeydownOption {\n  el$: Ref<HTMLElement>\n}\nexport function useKeydown({ el$ }: UseKeydownOption, store: Ref<TreeStore>) {\n  const ns = useNamespace('tree')\n\n  const treeItems = shallowRef<Nullable<HTMLElement>[]>([])\n  const checkboxItems = shallowRef<Nullable<HTMLElement>[]>([])\n\n  onMounted(() => {\n    initTabIndex()\n    on(el$.value, 'keydown', handleKeydown)\n  })\n\n  onBeforeUnmount(() => {\n    off(el$.value, 'keydown', handleKeydown)\n  })\n\n  onUpdated(() => {\n    treeItems.value = Array.from(el$.value.querySelectorAll('[role=treeitem]'))\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n  })\n\n  watch(checkboxItems, (val) => {\n    val.forEach((checkbox) => {\n      checkbox.setAttribute('tabindex', '-1')\n    })\n  })\n\n  const handleKeydown = (ev: KeyboardEvent): void => {\n    const currentItem = ev.target as HTMLElement\n    if (!currentItem.className.includes(ns.b('node'))) return\n    const code = ev.code\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    const currentIndex = treeItems.value.indexOf(currentItem)\n    let nextIndex\n    if ([EVENT_CODE.up, EVENT_CODE.down].includes(code)) {\n      ev.preventDefault()\n      if (code === EVENT_CODE.up) {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex !== 0\n            ? currentIndex - 1\n            : treeItems.value.length - 1\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex--\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex < 0) {\n            nextIndex = treeItems.value.length - 1\n          }\n        }\n      } else {\n        nextIndex =\n          currentIndex === -1\n            ? 0\n            : currentIndex < treeItems.value.length - 1\n            ? currentIndex + 1\n            : 0\n        const startIndex = nextIndex\n        while (true) {\n          if (\n            store.value.getNode(treeItems.value[nextIndex].dataset.key).canFocus\n          )\n            break\n          nextIndex++\n          if (nextIndex === startIndex) {\n            nextIndex = -1\n            break\n          }\n          if (nextIndex >= treeItems.value.length) {\n            nextIndex = 0\n          }\n        }\n      }\n      nextIndex !== -1 && treeItems.value[nextIndex].focus()\n    }\n    if ([EVENT_CODE.left, EVENT_CODE.right].includes(code)) {\n      ev.preventDefault()\n      currentItem.click()\n    }\n    const hasInput = currentItem.querySelector(\n      '[type=\"checkbox\"]'\n    ) as Nullable<HTMLInputElement>\n    if ([EVENT_CODE.enter, EVENT_CODE.space].includes(code) && hasInput) {\n      ev.preventDefault()\n      hasInput.click()\n    }\n  }\n\n  const initTabIndex = (): void => {\n    treeItems.value = Array.from(\n      el$.value.querySelectorAll(`.${ns.is('focusable')}[role=treeitem]`)\n    )\n    checkboxItems.value = Array.from(\n      el$.value.querySelectorAll('input[type=checkbox]')\n    )\n    const checkedItem = el$.value.querySelectorAll(\n      `.${ns.is('checked')}[role=treeitem]`\n    )\n    if (checkedItem.length) {\n      checkedItem[0].setAttribute('tabindex', '0')\n      return\n    }\n    treeItems.value[0]?.setAttribute('tabindex', '0')\n  }\n}\n","<template>\n  <div\n    ref=\"el$\"\n    :class=\"[\n      ns.b(),\n      ns.is('dragging', !!dragState.draggingNode),\n      ns.is('drop-not-allow', !dragState.allowDrop),\n      ns.is('drop-inner', dragState.dropType === 'inner'),\n      { [ns.m('highlight-current')]: highlightCurrent },\n    ]\"\n    role=\"tree\"\n  >\n    <el-tree-node\n      v-for=\"child in root.childNodes\"\n      :key=\"getNodeKey(child)\"\n      :node=\"child\"\n      :props=\"props\"\n      :accordion=\"accordion\"\n      :render-after-expand=\"renderAfterExpand\"\n      :show-checkbox=\"showCheckbox\"\n      :render-content=\"renderContent\"\n      @node-expand=\"handleNodeExpand\"\n    />\n    <div v-if=\"isEmpty\" :class=\"ns.e('empty-block')\">\n      <span :class=\"ns.e('empty-text')\">{{\n        emptyText ?? t('el.tree.emptyText')\n      }}</span>\n    </div>\n    <div\n      v-show=\"dragState.showDropIndicator\"\n      ref=\"dropIndicator$\"\n      :class=\"ns.e('drop-indicator')\"\n    />\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  getCurrentInstance,\n  provide,\n  ref,\n  watch,\n} from 'vue'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport TreeStore from './model/tree-store'\nimport { getNodeKey as getNodeKeyUtil } from './model/util'\nimport ElTreeNode from './tree-node.vue'\nimport { useNodeExpandEventBroadcast } from './model/useNodeExpandEventBroadcast'\nimport { useDragNodeHandler } from './model/useDragNode'\nimport { useKeydown } from './model/useKeydown'\nimport type Node from './model/node'\n\nimport type { Component, ComponentInternalInstance, PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type {\n  TreeComponentProps,\n  TreeData,\n  TreeKey,\n  TreeNodeData,\n} from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTree',\n  components: { ElTreeNode },\n  props: {\n    data: {\n      type: Array,\n      default: () => [],\n    },\n    emptyText: {\n      type: String,\n    },\n    renderAfterExpand: {\n      type: Boolean,\n      default: true,\n    },\n    nodeKey: String,\n    checkStrictly: Boolean,\n    defaultExpandAll: Boolean,\n    expandOnClickNode: {\n      type: Boolean,\n      default: true,\n    },\n    checkOnClickNode: Boolean,\n    checkDescendants: {\n      type: Boolean,\n      default: false,\n    },\n    autoExpandParent: {\n      type: Boolean,\n      default: true,\n    },\n    defaultCheckedKeys: Array as PropType<\n      TreeComponentProps['defaultCheckedKeys']\n    >,\n    defaultExpandedKeys: Array as PropType<\n      TreeComponentProps['defaultExpandedKeys']\n    >,\n    currentNodeKey: [String, Number] as PropType<string | number>,\n    renderContent: Function,\n    showCheckbox: {\n      type: Boolean,\n      default: false,\n    },\n    draggable: {\n      type: Boolean,\n      default: false,\n    },\n    allowDrag: Function,\n    allowDrop: Function,\n    props: {\n      type: Object as PropType<TreeComponentProps['props']>,\n      default: () => ({\n        children: 'children',\n        label: 'label',\n        disabled: 'disabled',\n      }),\n    },\n    lazy: {\n      type: Boolean,\n      default: false,\n    },\n    highlightCurrent: Boolean,\n    load: Function as PropType<TreeComponentProps['load']>,\n    filterNodeMethod: Function as PropType<\n      TreeComponentProps['filterNodeMethod']\n    >,\n    accordion: Boolean,\n    indent: {\n      type: Number,\n      default: 18,\n    },\n    icon: [String, Object] as PropType<string | Component>,\n  },\n  emits: [\n    'check-change',\n    'current-change',\n    'node-click',\n    'node-contextmenu',\n    'node-collapse',\n    'node-expand',\n    'check',\n    'node-drag-start',\n    'node-drag-end',\n    'node-drop',\n    'node-drag-leave',\n    'node-drag-enter',\n    'node-drag-over',\n  ],\n  setup(props, ctx) {\n    const { t } = useLocale()\n    const ns = useNamespace('tree')\n\n    const store = ref<TreeStore>(\n      new TreeStore({\n        key: props.nodeKey,\n        data: props.data,\n        lazy: props.lazy,\n        props: props.props,\n        load: props.load,\n        currentNodeKey: props.currentNodeKey,\n        checkStrictly: props.checkStrictly,\n        checkDescendants: props.checkDescendants,\n        defaultCheckedKeys: props.defaultCheckedKeys,\n        defaultExpandedKeys: props.defaultExpandedKeys,\n        autoExpandParent: props.autoExpandParent,\n        defaultExpandAll: props.defaultExpandAll,\n        filterNodeMethod: props.filterNodeMethod,\n      })\n    )\n\n    store.value.initialize()\n\n    const root = ref<Node>(store.value.root)\n    const currentNode = ref<Node>(null)\n    const el$ = ref<Nullable<HTMLElement>>(null)\n    const dropIndicator$ = ref<Nullable<HTMLElement>>(null)\n\n    const { broadcastExpanded } = useNodeExpandEventBroadcast(props)\n\n    const { dragState } = useDragNodeHandler({\n      props,\n      ctx,\n      el$,\n      dropIndicator$,\n      store,\n    })\n\n    useKeydown({ el$ }, store)\n\n    const isEmpty = computed(() => {\n      const { childNodes } = root.value\n      return (\n        !childNodes ||\n        childNodes.length === 0 ||\n        childNodes.every(({ visible }) => !visible)\n      )\n    })\n\n    watch(\n      () => props.defaultCheckedKeys,\n      (newVal) => {\n        store.value.setDefaultCheckedKey(newVal)\n      }\n    )\n\n    watch(\n      () => props.defaultExpandedKeys,\n      (newVal) => {\n        store.value.setDefaultExpandedKeys(newVal)\n      }\n    )\n\n    watch(\n      () => props.data,\n      (newVal) => {\n        store.value.setData(newVal)\n      },\n      { deep: true }\n    )\n\n    watch(\n      () => props.checkStrictly,\n      (newVal) => {\n        store.value.checkStrictly = newVal\n      }\n    )\n\n    const filter = (value) => {\n      if (!props.filterNodeMethod)\n        throw new Error('[Tree] filterNodeMethod is required when filter')\n      store.value.filter(value)\n    }\n\n    const getNodeKey = (node: Node) => {\n      return getNodeKeyUtil(props.nodeKey, node.data)\n    }\n\n    const getNodePath = (data: TreeKey | TreeNodeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getNodePath')\n      const node = store.value.getNode(data)\n      if (!node) return []\n      const path = [node.data]\n      let parent = node.parent\n      while (parent && parent !== root.value) {\n        path.push(parent.data)\n        parent = parent.parent\n      }\n      return path.reverse()\n    }\n\n    const getCheckedNodes = (\n      leafOnly?: boolean,\n      includeHalfChecked?: boolean\n    ): TreeNodeData[] => {\n      return store.value.getCheckedNodes(leafOnly, includeHalfChecked)\n    }\n\n    const getCheckedKeys = (leafOnly?: boolean): TreeKey[] => {\n      return store.value.getCheckedKeys(leafOnly)\n    }\n\n    const getCurrentNode = (): TreeNodeData => {\n      const currentNode = store.value.getCurrentNode()\n      return currentNode ? currentNode.data : null\n    }\n\n    const getCurrentKey = (): any => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in getCurrentKey')\n      const currentNode = getCurrentNode()\n      return currentNode ? currentNode[props.nodeKey] : null\n    }\n\n    const setCheckedNodes = (nodes: Node[], leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedNodes')\n      store.value.setCheckedNodes(nodes, leafOnly)\n    }\n\n    const setCheckedKeys = (keys, leafOnly?: boolean) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCheckedKeys')\n      store.value.setCheckedKeys(keys, leafOnly)\n    }\n\n    const setChecked = (\n      data: TreeKey | TreeNodeData,\n      checked: boolean,\n      deep: boolean\n    ) => {\n      store.value.setChecked(data, checked, deep)\n    }\n\n    const getHalfCheckedNodes = (): TreeNodeData[] => {\n      return store.value.getHalfCheckedNodes()\n    }\n\n    const getHalfCheckedKeys = (): TreeKey[] => {\n      return store.value.getHalfCheckedKeys()\n    }\n\n    const setCurrentNode = (node: Node, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentNode')\n      store.value.setUserCurrentNode(node, shouldAutoExpandParent)\n    }\n\n    const setCurrentKey = (key: TreeKey, shouldAutoExpandParent = true) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in setCurrentKey')\n      store.value.setCurrentNodeKey(key, shouldAutoExpandParent)\n    }\n\n    const getNode = (data: TreeKey | TreeNodeData): Node => {\n      return store.value.getNode(data)\n    }\n\n    const remove = (data: TreeNodeData | Node) => {\n      store.value.remove(data)\n    }\n\n    const append = (\n      data: TreeNodeData,\n      parentNode: TreeNodeData | TreeKey | Node\n    ) => {\n      store.value.append(data, parentNode)\n    }\n\n    const insertBefore = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertBefore(data, refNode)\n    }\n\n    const insertAfter = (\n      data: TreeNodeData,\n      refNode: TreeKey | TreeNodeData\n    ) => {\n      store.value.insertAfter(data, refNode)\n    }\n\n    const handleNodeExpand = (\n      nodeData: TreeNodeData,\n      node: Node,\n      instance: ComponentInternalInstance\n    ) => {\n      broadcastExpanded(node)\n      ctx.emit('node-expand', nodeData, node, instance)\n    }\n\n    const updateKeyChildren = (key: TreeKey, data: TreeData) => {\n      if (!props.nodeKey)\n        throw new Error('[Tree] nodeKey is required in updateKeyChild')\n      store.value.updateChildren(key, data)\n    }\n\n    provide('RootTree', {\n      ctx,\n      props,\n      store,\n      root,\n      currentNode,\n      instance: getCurrentInstance(),\n    } as any)\n\n    return {\n      ns,\n      // ref\n      store,\n      root,\n      currentNode,\n      dragState,\n      el$,\n      dropIndicator$,\n\n      // computed\n      isEmpty,\n\n      // methods\n      filter,\n      getNodeKey,\n      getNodePath,\n      getCheckedNodes,\n      getCheckedKeys,\n      getCurrentNode,\n      getCurrentKey,\n      setCheckedNodes,\n      setCheckedKeys,\n      setChecked,\n      getHalfCheckedNodes,\n      getHalfCheckedKeys,\n      setCurrentNode,\n      setCurrentKey,\n      t,\n      getNode,\n      remove,\n      append,\n      insertBefore,\n      insertAfter,\n      handleNodeExpand,\n      updateKeyChildren,\n    }\n  },\n})\n</script>\n","import Tree from './src/tree.vue'\n\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nTree.install = (app: App): void => {\n  app.component(Tree.name, Tree)\n}\n\nconst _Tree = Tree as SFCWithInstall<typeof Tree>\n\nexport default _Tree\nexport const ElTree = _Tree\n","import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-d13e2ac0\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"rolemanager\"\n};\nconst _hoisted_2 = {\n  class: \"menu-tree\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ac_page_search = _resolveComponent(\"ac-page-search\");\n\n  const _component_ac_page_content = _resolveComponent(\"ac-page-content\");\n\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n\n  const _component_ac_page_modal = _resolveComponent(\"ac-page-modal\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ac_page_search, {\n    \"search-form-config\": _ctx.formConfig,\n    onQueryBtnClick: _ctx.handleQueryClick,\n    onResetBtnClick: _ctx.handleResetClick\n  }, null, 8, [\"search-form-config\", \"onQueryBtnClick\", \"onResetBtnClick\"]), _createVNode(_component_ac_page_content, {\n    \"content-table-config\": _ctx.tableConfig,\n    \"page-name\": \"role\",\n    onCreateBtnClick: _ctx.handleCreateClick,\n    onEditBtnClick: _ctx.handleEditClick,\n    ref: \"acPageContentRef\"\n  }, null, 8, [\"content-table-config\", \"onCreateBtnClick\", \"onEditBtnClick\"]), _createVNode(_component_ac_page_modal, {\n    \"modal-config\": _ctx.modalConfig,\n    \"page-name\": \"role\",\n    ref: \"acModalRef\",\n    \"default-info\": _ctx.defaultInfo,\n    \"other-info\": _ctx.otherInfo\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_tree, {\n      data: _ctx.menus,\n      ref: \"elfTreeRef\",\n      \"show-checkbox\": \"\",\n      \"node-key\": \"id\",\n      onCheck: _ctx.handleCheckChange,\n      props: {\n        children: 'children',\n        label: 'name'\n      }\n    }, null, 8, [\"data\", \"onCheck\"])])]),\n    _: 1\n  }, 8, [\"modal-config\", \"default-info\", \"other-info\"])]);\n}","export const tableConfig = {\n  title: \"角色列表\",\n  propList: [\n    { prop: \"name\", label: \"角色名\", minWidth: \"100\", slotName: \"name\" },\n    {\n      prop: \"intro\",\n      label: \"权限介绍\",\n      minWidth: \"100\",\n      slotName: \"intro\"\n    },\n    {\n      prop: \"createAt\",\n      label: \"创建时间\",\n      minWidth: \"250\",\n      slotName: \"createAt\"\n    },\n    {\n      prop: \"updateAt\",\n      label: \"更新时间\",\n      minWidth: \"250\",\n      slotName: \"updateAt\"\n    },\n    { label: \"操作\", minWidth: \"120\", slotName: \"handler\" }\n  ],\n  showIndexColumn: true,\n  showSelectColumn: true,\n  showFooter: true\n};\n","import { IForm } from \"@/base-ui/form\";\n\nexport const formConfig: IForm = {\n  formItems: [\n    {\n      field: \"name\",\n      type: \"input\",\n      label: \"角色名称\",\n      placeholder: \"请输入角色名称\"\n    },\n    {\n      field: \"intro\",\n      type: \"input\",\n      label: \"职业\",\n      placeholder: \"请输入职业\"\n    },\n    {\n      field: \"createAt\",\n      type: \"datepicker\",\n      label: \"创建时间\",\n      placeholder: \"请选择创建时间\",\n      otherOptions: {\n        startPlaceholder: \"开始时间\",\n        endPlaceholder: \"结束时间\",\n        type: \"daterange\"\n      }\n    }\n  ],\n  labelWidth: \"120px\",\n  // colLayout: {\n  //   span: 8\n  // },\n  itemStyle: {\n    padding: \"10px 40px\"\n  }\n};\n","import { IForm } from \"@/base-ui/form\";\n\nexport const modalConfig: IForm = {\n  formItems: [\n    {\n      field: \"name\",\n      type: \"input\",\n      label: \"角色名\",\n      placeholder: \"请输入角色名\"\n    },\n    {\n      field: \"intro\",\n      type: \"input\",\n      label: \"角色介绍\",\n      placeholder: \"请输入角色介绍\"\n    }\n    // {\n    //   field: \"roleId\",\n    //   type: \"select\",\n    //   label: \"选择角色\",\n    //   placeholder: \"请选择角色\",\n    //   options: []\n    // }\n  ],\n  colLayout: { span: 24 },\n  itemStyle: {}\n};\n","import { defineComponent, computed, ref, nextTick } from \"vue\";\nimport AcPageSearch from \"@/components/page-search\";\nimport AcPageContent from \"@/components/page-content\";\nimport AcPageModal from \"@/components/page-modal\";\nimport { tableConfig } from \"./config/table-config\";\nimport { formConfig } from \"./config/search-config\";\nimport { modalConfig } from \"./config/modal-config\";\nimport { usePageSearch } from \"@/hooks/usePageSearch\";\nimport { usePageModal } from \"@/hooks/usePageModal\";\nimport { menuMapLeafKeys } from \"@/utils/map-menus\";\nimport { useStore } from \"@/store\";\nexport default defineComponent({\n  name: \"RoleManager\",\n  components: {\n    AcPageSearch,\n    AcPageContent,\n    AcPageModal\n  },\n\n  setup() {\n    const [acPageContentRef, handleResetClick, handleQueryClick] = usePageSearch(); // 1. 处理pageModal 的 hook\n\n    const elfTreeRef = ref();\n\n    const editCallback = item => {\n      const leafKeys = menuMapLeafKeys(item.menuList);\n      nextTick(() => {\n        console.log(leafKeys);\n        elfTreeRef.value?.setCheckedKeys(leafKeys, false);\n      });\n    };\n\n    const [acModalRef, defaultInfo, handleCreateClick, handleEditClick] = usePageModal(undefined, editCallback);\n    const store = useStore();\n    const menus = computed(() => store.state.entireMenu);\n    const otherInfo = ref({});\n\n    const handleCheckChange = (data1, data2) => {\n      const checkedKeys = data2.checkedKeys;\n      const halfCheckedKeys = data2.halfCheckedKeys;\n      const menuList = [...checkedKeys, ...halfCheckedKeys];\n      otherInfo.value = {\n        menuList\n      };\n      console.log(otherInfo.value);\n    };\n\n    return {\n      formConfig,\n      tableConfig,\n      modalConfig,\n      acModalRef,\n      defaultInfo,\n      menus,\n      otherInfo,\n      handleCreateClick,\n      handleEditClick,\n      acPageContentRef,\n      handleResetClick,\n      handleQueryClick,\n      elfTreeRef,\n      handleCheckChange\n    };\n  }\n\n});","/* unplugin-vue-components disabled */import { render } from \"./RoleManager.vue?vue&type=template&id=d13e2ac0&scoped=true&ts=true\"\nimport script from \"./RoleManager.vue?vue&type=script&lang=ts\"\nexport * from \"./RoleManager.vue?vue&type=script&lang=ts\"\n\nimport \"./RoleManager.vue?vue&type=style&index=0&id=d13e2ac0&lang=less&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\project\\\\vue-mannager-systeam\\\\vue3-ts-cms\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d13e2ac0\"]])\n\nexport default __exports__","<template>\n  <transition :name=\"ns.b()\" v-on=\"on\">\n    <slot />\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nexport default defineComponent({\n  name: 'ElCollapseTransition',\n  setup() {\n    const ns = useNamespace('collapse-transition')\n\n    return {\n      ns,\n      on: {\n        beforeEnter(el) {\n          if (!el.dataset) el.dataset = {}\n\n          el.dataset.oldPaddingTop = el.style.paddingTop\n          el.dataset.oldPaddingBottom = el.style.paddingBottom\n\n          el.style.maxHeight = 0\n          el.style.paddingTop = 0\n          el.style.paddingBottom = 0\n        },\n\n        enter(el) {\n          el.dataset.oldOverflow = el.style.overflow\n          if (el.scrollHeight !== 0) {\n            el.style.maxHeight = `${el.scrollHeight}px`\n            el.style.paddingTop = el.dataset.oldPaddingTop\n            el.style.paddingBottom = el.dataset.oldPaddingBottom\n          } else {\n            el.style.maxHeight = 0\n            el.style.paddingTop = el.dataset.oldPaddingTop\n            el.style.paddingBottom = el.dataset.oldPaddingBottom\n          }\n\n          el.style.overflow = 'hidden'\n        },\n\n        afterEnter(el) {\n          el.style.maxHeight = ''\n          el.style.overflow = el.dataset.oldOverflow\n        },\n\n        beforeLeave(el) {\n          if (!el.dataset) el.dataset = {}\n          el.dataset.oldPaddingTop = el.style.paddingTop\n          el.dataset.oldPaddingBottom = el.style.paddingBottom\n          el.dataset.oldOverflow = el.style.overflow\n\n          el.style.maxHeight = `${el.scrollHeight}px`\n          el.style.overflow = 'hidden'\n        },\n\n        leave(el) {\n          if (el.scrollHeight !== 0) {\n            el.style.maxHeight = 0\n            el.style.paddingTop = 0\n            el.style.paddingBottom = 0\n          }\n        },\n\n        afterLeave(el) {\n          el.style.maxHeight = ''\n          el.style.overflow = el.dataset.oldOverflow\n          el.style.paddingTop = el.dataset.oldPaddingTop\n          el.style.paddingBottom = el.dataset.oldPaddingBottom\n        },\n      },\n    }\n  },\n})\n</script>\n","import CollapseTransition from './src/collapse-transition.vue'\nimport type { App } from 'vue'\nimport type { SFCWithInstall } from '@element-plus/utils'\n\nCollapseTransition.install = (app: App): void => {\n  app.component(CollapseTransition.name, CollapseTransition)\n}\n\nconst _CollapseTransition = CollapseTransition as SFCWithInstall<\n  typeof CollapseTransition\n>\n\nexport default _CollapseTransition\nexport const ElCollapseTransition = _CollapseTransition\n"],"names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key","getChildState","all","none","allWithoutDisable","i","j","length","n","checked","indeterminate","disabled","half","reInitChecked","childNodes","parent","level","store","checkStrictly","getPropertyFromData","prop","props","config","dataProp","nodeIdSeed","Node","constructor","options","text","expanded","visible","isCurrent","canFocus","name","hasOwn","loaded","loading","initialize","Error","registerNode","isLeaf","isLeafByUser","lazy","setData","defaultExpandAll","expand","Array","isArray","defaultExpandedKeys","includes","autoExpandParent","currentNodeKey","currentNode","_initDefaultCheckedNode","updateLeafState","children","insertChild","label","nodeKey","nextSibling","index","indexOf","previousSibling","target","deep","some","child","contains","removeChild","batch","getChildren","push","splice","assign","reactive","insertBefore","ref","dataIndex","deregisterNode","targetNode","callback","expandParent","done","forEach","item","shouldLoadData","loadData","setChecked","array","defaultProps","collapse","load","recursion","passValue","checkDescendants","handleDescendants","isCheck","all2","forceInit","updateChildren","newData","oldData","map","newDataMap","newNodes","isNodeExists","findIndex","removeChildByData","keys","call","resolve","doCreateChildren","TreeStore","option","nodesMap","root","loadFn","_initDefaultCheckedNodes","filter","filterNodeMethod","traverse","allHidden","newVal","instanceChanged","this","refData","refNode","getNode","insertAfter","parentData","parentNode","defaultCheckedKeys","checkedKey","leafOnly","includeHalfChecked","checkedNodes","getCheckedNodes","getHalfCheckedNodes","nodes","getHalfCheckedKeys","allNodes","remove","append","checkedKeys","_getAllNodes","sort","a","b","cache","create","toString","node2","setCheckedNodes","_setCheckedKeys","setCheckedKeys","key2","prevCurrentNode","shouldAutoExpandParent","currNode","setCurrentNode","_sfc_main","defineComponent","_hoisted_1","viewBox","xmlns","_hoisted_2","createElementVNode","fill","d","_hoisted_3","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","caretRight","_export_sfc","type","required","renderContent","Function","setup","ns","useNamespace","nodeInstance","inject","tree","h","_self","ctx","slots","default","class","be","useNodeExpandEventBroadcast","parentNodeMap","currentNodeMap","treeNodeExpand","provide","broadcastExpanded","accordion","childNode","dragEventsKey","Symbol","useDragNodeHandler","el$","dropIndicator$","dragState","showDropIndicator","draggingNode","dropNode","allowDrop","dropType","treeNodeDragStart","event","treeNode","allowDrag","preventDefault","dataTransfer","effectAllowed","e","emit","treeNodeDragOver","oldDropNode","removeClass","$el","is","dropPrev","dropInner","dropNext","userAllowDropInner","dropEffect","targetPosition","getBoundingClientRect","treePosition","prevPercent","nextPercent","indicatorTop","distance","clientY","top","height","iconPosition","querySelector","dropIndicator","bottom","style","left","right","addClass","treeNodeDragEnd","draggingNodeCopy","components","ElCollapseTransition","ElCheckbox","NodeContent","ElIcon","Loading","Boolean","renderAfterExpand","showCheckbox","emits","childNodeRendered","oldChecked","oldIndeterminate","node$","dragEvents","instance","debugWarn","childrenKey","watch","val","handleSelectChange","nextTick","getNodeKeyUtil","getNodeClass","nodeClassFunc","className","isFunction","isString","handleClick","expandOnClickNode","handleExpandIconClick","checkOnClickNode","handleCheckChange","handleContextMenu","vnode","ev","getCheckedKeys","halfCheckedNodes","halfCheckedKeys","handleChildNodeExpand","nodeData","instance2","handleDragStart","draggable","handleDragOver","handleDrop","handleDragEnd","CaretRight","_createElementBlock","role","tabindex","onClick","onContextmenu","onDragstart","onDragover","onDragend","onDrop","_createElementVNode","_normalizeClass","_normalizeStyle","paddingLeft","indent","icon","_openBlock","_createBlock","_withModifiers","_","onChange","_createCommentVNode","_createVNode","withDirectives","_Fragment","_renderList","onNodeExpand","useKeydown","treeItems","shallowRef","checkboxItems","onMounted","initTabIndex","on","handleKeydown","onBeforeUnmount","off","onUpdated","from","querySelectorAll","checkbox","setAttribute","currentItem","code","currentIndex","nextIndex","EVENT_CODE","startIndex","dataset","focus","click","hasInput","_a","checkedItem","ElTreeNode","emptyText","String","Number","highlightCurrent","t","useLocale","isEmpty","computed","every","setDefaultCheckedKey","setDefaultExpandedKeys","getNodePath","path","reverse","getCurrentNode","currentNode2","getCurrentKey","setUserCurrentNode","setCurrentKey","setCurrentNodeKey","handleNodeExpand","updateKeyChildren","_toDisplayString","_withDirectives","Tree","app","component","_Tree","ElTree","render","_component_ac_page_search","_component_ac_page_content","_component_el_tree","_component_ac_page_modal","formConfig","onQueryBtnClick","handleQueryClick","onResetBtnClick","handleResetClick","tableConfig","onCreateBtnClick","handleCreateClick","onEditBtnClick","handleEditClick","modalConfig","defaultInfo","otherInfo","menus","onCheck","title","propList","minWidth","slotName","showIndexColumn","showSelectColumn","showFooter","formItems","field","placeholder","otherOptions","startPlaceholder","endPlaceholder","labelWidth","itemStyle","padding","colLayout","span","AcPageSearch","AcPageContent","AcPageModal","acPageContentRef","usePageSearch","elfTreeRef","editCallback","leafKeys","menuList","console","log","acModalRef","usePageModal","undefined","state","entireMenu","data1","data2","__exports__","beforeEnter","el","oldPaddingTop","paddingTop","oldPaddingBottom","paddingBottom","maxHeight","enter","oldOverflow","overflow","scrollHeight","afterEnter","beforeLeave","leave","afterLeave","_Transition","_toHandlers","_renderSlot","CollapseTransition","_CollapseTransition"],"sourceRoot":""}